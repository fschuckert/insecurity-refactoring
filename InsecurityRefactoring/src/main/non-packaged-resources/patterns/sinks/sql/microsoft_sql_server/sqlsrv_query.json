{"init":[],"code":["<call>(sqlsrv_query, <any>(), %input)"],"pattern_type":"expression","generates":[{"init":["<=>(<$>(info),<array>(<ae_k>(<s>(Database),<s>(myDB)),<ae_k>(<s>(UID),<s>(SA)),<ae_k>(<s>(PWD),<s>(Msql12345678!))))","<=>(<$>(db),<call>(sqlsrv_connect,<s>(mssql),<$>(info)))","<if>(<==>(<$>(db),<false>()),<stmtlist>(<call>(die,<call>(print_r,<call>(sqlsrv_errors),<true>()))))"],"generate_output_code":["<=>(<$>(result),%input)","<while>(<=>(<$>(row),<call>(sqlsrv_fetch_object,<$>(result))),<echo>(<call>(htmlentities,<call>(print_r,<$>(row),<true>()))))"],"params":["<$>(db)"]}],"generate_files":[{"Dockerfile":["FROM php:7.3-apache","RUN apt-get update","ENV ACCEPT_EULA=Y","RUN apt-get update","RUN apt-get install -y gnupg gnupg2 gnupg1","# Microsoft SQL Server Prerequisites","RUN apt-get update && curl https:\/\/packages.microsoft.com\/keys\/microsoft.asc | apt-key add - \\","  && curl https:\/\/packages.microsoft.com\/config\/debian\/9\/prod.list > \/etc\/apt\/sources.list.d\/mssql-release.list  \\ ","  && apt-get install -y --no-install-recommends locales apt-transport-https && echo \"en_US.UTF-8 UTF-8\" > \/etc\/locale.gen \\ ","  && locale-gen && apt-get update \\ ","  && apt-get -y --no-install-recommends install unixodbc-dev msodbcsql17","RUN pecl install sqlsrv pdo_sqlsrv","RUN docker-php-ext-enable sqlsrv pdo_sqlsrv","RUN docker-php-ext-install pdo mbstring","RUN a2enmod rewrite","COPY src\/ \/var\/www\/html\/","EXPOSE 80"]},{"docker-compose.yml":["version: '2'","services:","  mssql:","    build:","      context: .","      dockerfile: Dockerfile-mssql","    restart: always","    environment:","      - MSSQL_SA_PASSWORD=Msql12345678!","      - ACCEPT_EULA=\"Y\"","  website:","    container_name: apache_php","    image: apache:php","    build:","      context: .\/","    volumes:","      - .\/src:\/var\/www\/html\/","    ports:","      - 8000:80","    depends_on:","      - mssql"]},{"Dockerfile-mssql":["FROM microsoft\/mssql-server-linux:latest","# Create work directory","RUN mkdir -p \/usr\/work","WORKDIR \/usr\/work","# Copy all scripts into working directory","COPY init.sql \/usr\/work\/","COPY import-data.sh \/usr\/work\/","COPY entrypoint.sh \/usr\/work\/","# Grant permissions for the import-data script to be executable","RUN chmod +x \/usr\/work\/import-data.sh","EXPOSE 1433","CMD \/bin\/bash .\/entrypoint.sh"]},{"entrypoint.sh":["\/usr\/work\/import-data.sh & \/opt\/mssql\/bin\/sqlservr"]},{"|pre|init.sql":["CREATE DATABASE myDB;","GO","USE myDB;","GO"]},{"|aft|init.sql":["GO"]},{"import-data.sh":["# wait for the SQL Server to come up","sleep 90s","","#run the setup script to create the DB and the schema in the DB","\/opt\/mssql-tools\/bin\/sqlcmd -S localhost -U SA -P \"Msql12345678!\" -i init.sql"]}],"sufficient_escapes":["\\"],"vuln":"sqli","name":"sqlsrv_query","input_type":"expression","type":"sink","output_return":false}